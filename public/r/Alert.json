{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "Alert",
  "type": "registry:component",
  "dependencies": [
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "registry/ruzul/ui/alert.tsx",
      "content": "import * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst afterShine =\r\n  \"after:content-[''] after:absolute after:top-0 after:w-[150%] after:h-[100%] after:bg-[linear-gradient(120deg,transparent,var(--color-gleem),transparent)] after:skew-x-[-20deg] after:pointer-events-none after:animate-[shine_2s_infinite]\";\r\n\r\nconst baseHover = `border-b-4 border-l-4 border-t-[1px] border-r-[1px] animate-[toggleAlert_1s_infinite] [animation-delay:var(--delay)]`;\r\n\r\nconst alertVariants = cva(\r\n  \"relative overflow-hidden border-component-primary w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: `bg-card text-card-foreground ${baseHover} ${afterShine}`,\r\n        destructive: `text-destructive bg-card border-destructive [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90 ${baseHover} ${afterShine}`,\r\n        success: `text-success bg-card border-success [&>svg]:text-current *:data-[slot=alert-description]:text-success/90 ${baseHover} ${afterShine}`,\r\n        warning: `text-warning bg-card border-warning [&>svg]:text-current *:data-[slot=alert-description]:text-warning/90 ${baseHover} ${afterShine}`,\r\n        info: `text-info bg-card border-info [&>svg]:text-current *:data-[slot=alert-description]:text-info/90 ${baseHover} ${afterShine}`,\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nfunction Alert({\r\n  className,\r\n  variant,\r\n  ...props\r\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\r\n  const delay = React.useMemo(\r\n    () => `${Math.random() * 2}s`, // random between 0â€“2s\r\n    []\r\n  );\r\n  return (\r\n    <div\r\n      data-slot=\"alert\"\r\n      role=\"alert\"\r\n      style={{ [\"--delay\" as any]: delay }}\r\n      className={cn(alertVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert-title\"\r\n      className={cn(\r\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction AlertDescription({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert-description\"\r\n      className={cn(\r\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Alert, AlertTitle, AlertDescription };\r\n",
      "type": "registry:component",
      "target": "components/ruzul/alert.tsx"
    }
  ]
}